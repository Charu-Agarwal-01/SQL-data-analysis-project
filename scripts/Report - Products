/*----------------------------------------------------------------------------------------------------------------------------------
Purpose: 
         This report consolidates key product metrics and behavious.

Highlights:
         1. Gathers essential fields like product name, category, subcategory and cost.
         2. Segments products by revenue to identify High-performers, Mid-range and low-performers. 
         3. Aggregates product-level metrics:
              - total orders
		      - total sales
              - total quantity sold
              - total unique customers
              - lifespan (in months)
		4. Calculates valuable KPIs:
              - recency (months since last order)
              - average order revenue
              - average monthly revenue
-----------------------------------------------------------------------------------------------------------*/


CREATE VIEW report_products as

with base_query as (
/*--------------------------------------------------------------------------------------------------------------------------------
Base query: Retrieves core columns from sales and products
----------------------------------------------------------------------------------------------------------------------------------------*/
select 
  s.order_number,
  s.order_date,
  s.customer_key,
  s.sales_amount,
  s.quantity,
  p.product_key,
  p.product_name,
  p.category,
  p.subcategory,
  p.cost
from sales s 
left join products p 
on s.product_key = p.product_key
where order_date is not null -- only consider valid sales date
),

product_aggregations as (
/*--------------------------------------------------------------------------------------------------------------------------------
Customer aggregations: Summarizes key metrics at the customer level
----------------------------------------------------------------------------------------------------------------------------------------*/
select 
 product_key,
 product_name,
 category,
 subcategory,
 cost,
 timestampdiff(month, min(order_date), max(order_date)) as lifespan,
 max(order_date) as last_sale_date,
 count(distinct order_number) as total_orders,
 count(distinct customer_key) as total_customers,
 sum(sales_amount) as total_sales,
 sum(quantity) as total_quantity,
 round(avg(sales_amount)/ nullif(quantity,0),1) as avg_selling_price
 from base_query
 group by 
  product_key,
  product_name,
  category,
  subcategory,
  cost)

select 
  product_key,
  product_name,
  category,
  subcategory,
  cost,
  last_sale_date,
  timestampdiff(month, last_sale_date, curdate()) as recency, 
  case when total_sales > 50000 then 'High Performer'
       when total_sales >= 10000 then 'Mid-Range'
       else 'Low-Performer'
  end as product_segment,
  lifespan,
  total_orders,
  total_sales,
  total_quantity,
  total_customers,
  avg_selling_price,
-- Average order revenue
  case when total_orders = 0 then 0
     else total_sales / total_orders 
  end as avg_order_revenue,

-- calculate average monthly revenue
  case when lifespan = 0 then total_sales
     else total_sales / lifespan
  end as avg_monthly_revenue
from product_aggregations ;

