/*----------------------------------------------------------------------------------------------------------------------------------
Purpose: 
         This report consolidates key customer metrics and behavious.

Highlights:
         1. Gathers essential fields like names, ages and transaction details.
         2. Segments customers into categories (VIP, Regular, New) and age groups.
         3. Aggregates customer-level metrics:
              - total orders
		          - total sales
              - total quantity purchased
              - total products
              - lifespan (in months)
		4. Calculates valuable KPIs:
              - recency (months since last order)
-------------------------------------------------------------------------------------------------------------------------------------*/

CREATE VIEW report_customers as 
with base_query as (
/*--------------------------------------------------------------------------------------------------------------------------------
Base query: Retrieves core columns from tables
----------------------------------------------------------------------------------------------------------------------------------------*/
select
s.order_number,
s.product_key,
s.order_date,
s.sales_amount,
s.quantity,
c.customer_key,
c.customer_id,
concat(c.first_name, ' ', c.last_name) as customer_name,
timestampdiff(year, c.birth_date, curdate()) as age
from sales s
left join customers c
on s.customer_key = c.customer_key
),
customer_aggregation as(
/*--------------------------------------------------------------------------------------------------------------------------------
Customer aggregations: Summarizes key metrics at the customer level
----------------------------------------------------------------------------------------------------------------------------------------*/
 select 
 customer_key,
 customer_id,
 customer_name,
 age,
 count(distinct order_number) as total_orders,
 sum(sales_amount) as total_sales,
 sum(quantity) as total_quantity,
 count(distinct product_key) as total_products,
 max(order_date) as last_order_date,
 timestampdiff(month, min(order_date), max(order_date)) as lifespan
 from base_query
group by customer_key, 
	     customer_id,  
         customer_name, 
         age
)

select 
customer_key,
customer_id,
customer_name,
age,
case when age < 20 then 'Under 20'
     when age between 20 and 29 then '20-29'
     when age between 30 and 39 then '30-39'
     when age between 40 and 49 then '40-49'
     else '50 and above'
end as age_group,
case when lifespan >= 12 and total_sales > 5000 then 'VIP'
	 when lifespan >=12 and total_sales <=5000 then 'Regular'
	 else 'New'
end as customer_segments,
last_order_date,
timestampdiff(month, last_order_date, curdate()) as recency, 
total_orders,
total_sales,
total_quantity,
total_products,
lifespan,
-- Compare average order value
case when total_orders = 0 then 0
     else total_sales / total_orders 
end as avg_order_value,

-- calculate average monthly spend
case when lifespan = 0 then total_sales
     else total_sales / lifespan
end as avg_monthly_spend
from customer_aggregation ;
